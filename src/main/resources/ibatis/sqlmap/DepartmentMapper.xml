<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.phicomm.doctor.dataaccess.dao.DepartmentMapper">
  <resultMap id="BaseResultMap" type="com.phicomm.doctor.dataaccess.domain.Department">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="department_name" jdbcType="VARCHAR" property="departmentName" />
    <result column="parent_department_id" jdbcType="INTEGER" property="parentDepartmentId" />
    <result column="parent_department_name" jdbcType="VARCHAR" property="parentDepartmentName" />
  </resultMap>
  <sql id="Base_Column_List">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    id, department_name, parent_department_id, parent_department_name
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select 
    <include refid="Base_Column_List" />
    from department
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from department
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.phicomm.doctor.dataaccess.domain.Department">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into department (id, department_name, parent_department_id, 
      parent_department_name)
    values (#{id,jdbcType=INTEGER}, #{departmentName,jdbcType=VARCHAR}, #{parentDepartmentId,jdbcType=INTEGER}, 
      #{parentDepartmentName,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.phicomm.doctor.dataaccess.domain.Department">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into department
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="departmentName != null">
        department_name,
      </if>
      <if test="parentDepartmentId != null">
        parent_department_id,
      </if>
      <if test="parentDepartmentName != null">
        parent_department_name,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="departmentName != null">
        #{departmentName,jdbcType=VARCHAR},
      </if>
      <if test="parentDepartmentId != null">
        #{parentDepartmentId,jdbcType=INTEGER},
      </if>
      <if test="parentDepartmentName != null">
        #{parentDepartmentName,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.phicomm.doctor.dataaccess.domain.Department">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update department
    <set>
      <if test="departmentName != null">
        department_name = #{departmentName,jdbcType=VARCHAR},
      </if>
      <if test="parentDepartmentId != null">
        parent_department_id = #{parentDepartmentId,jdbcType=INTEGER},
      </if>
      <if test="parentDepartmentName != null">
        parent_department_name = #{parentDepartmentName,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.phicomm.doctor.dataaccess.domain.Department">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update department
    set department_name = #{departmentName,jdbcType=VARCHAR},
      parent_department_id = #{parentDepartmentId,jdbcType=INTEGER},
      parent_department_name = #{parentDepartmentName,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>