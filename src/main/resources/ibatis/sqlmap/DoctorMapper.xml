<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.phicomm.doctor.dataaccess.dao.DoctorMapper">
  <resultMap id="BaseResultMap" type="com.phicomm.doctor.dataaccess.domain.Doctor">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="openid" jdbcType="VARCHAR" property="openid" />
    <result column="head_img_url" jdbcType="VARCHAR" property="headImgUrl" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="sex" jdbcType="INTEGER" property="sex" />
    <result column="education" jdbcType="INTEGER" property="education" />
    <result column="work_time" jdbcType="INTEGER" property="workTime" />
    <result column="birthday" jdbcType="DATE" property="birthday" />
    <result column="province" jdbcType="VARCHAR" property="province" />
    <result column="city" jdbcType="VARCHAR" property="city" />
    <result column="area" jdbcType="INTEGER" property="area" />
    <result column="phone" jdbcType="VARCHAR" property="phone" />
    <result column="department_id" jdbcType="INTEGER" property="departmentId" />
    <result column="department_name" jdbcType="VARCHAR" property="departmentName" />
    <result column="title" jdbcType="INTEGER" property="title" />
    <result column="profession_card_url" jdbcType="VARCHAR" property="professionCardUrl" />
    <result column="qualification_card_url" jdbcType="VARCHAR" property="qualificationCardUrl" />
    <result column="practice_card_url" jdbcType="VARCHAR" property="practiceCardUrl" />
    <result column="audit_status" jdbcType="INTEGER" property="auditStatus" />
    <result column="complete_status" jdbcType="INTEGER" property="completeStatus" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="call" jdbcType="LONGVARCHAR" property="call" />
    <result column="work_experience" jdbcType="LONGVARCHAR" property="workExperience" />
    <result column="education_experience" jdbcType="LONGVARCHAR" property="educationExperience" />
    <result column="works" jdbcType="LONGVARCHAR" property="works" />
    <result column="good_field" jdbcType="LONGVARCHAR" property="goodField" />
    <result column="profile" jdbcType="LONGVARCHAR" property="profile" />
  </resultMap>
  
  <sql id="Base_Column_List">
    id, openid, head_img_url, `name`, sex, education, work_time, birthday, province, city, area, 
    phone, department_id, department_name, title, profession_card_url, qualification_card_url, 
    practice_card_url, audit_status, complete_status, create_time, update_time,
    `call`, work_experience, education_experience, works, good_field, `profile`
  </sql>
  
  <select id="getByOpenid" parameterType="java.lang.String" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from doctor
    where openid = #{openid,jdbcType=VARCHAR}
  </select>
  
  <insert id="insert" parameterType="com.phicomm.doctor.dataaccess.domain.Doctor">
    insert into doctor (openid, phone, `name`, head_img_url, create_time, update_time)
    values (#{openid,jdbcType=VARCHAR}, #{phone,jdbcType=VARCHAR}, #{name,jdbcType=VARCHAR}, #{headImgUrl,jdbcType=VARCHAR}, now(), now())
  </insert>
  
  <update id="updateBySelective" parameterType="com.phicomm.doctor.dataaccess.domain.Doctor">
    update doctor
    <set>
      <if test="headImgUrl != null and headImgUrl != ''">
        head_img_url = #{headImgUrl,jdbcType=VARCHAR},
      </if>
      <if test="name != null and name != ''">
        `name` = #{name,jdbcType=VARCHAR},
      </if>
      <if test="sex != null">
        sex = #{sex,jdbcType=INTEGER},
      </if>
      <if test="education != null">
        education = #{education,jdbcType=INTEGER},
      </if>
      <if test="workTime != null">
        work_time = #{workTime,jdbcType=INTEGER},
      </if>
      <if test="birthday != null">
        birthday = #{birthday,jdbcType=DATE},
      </if>
      <if test="province != null and province != ''">
        province = #{province,jdbcType=VARCHAR},
      </if>
      <if test="city != null and city != ''">
        city = #{city,jdbcType=VARCHAR},
      </if>
      <if test="area != null">
        area = #{area,jdbcType=INTEGER},
      </if>
      <if test="phone != null and phone != ''">
        phone = #{phone,jdbcType=VARCHAR},
      </if>
      <if test="departmentId != null">
        department_id = #{departmentId,jdbcType=INTEGER},
      </if>
      <if test="departmentName != null and departmentName != ''">
        department_name = #{departmentName,jdbcType=VARCHAR},
      </if>
      <if test="title != null">
        title = #{title,jdbcType=INTEGER},
      </if>
      <if test="professionCardUrl != null and professionCardUrl != ''">
        profession_card_url = #{professionCardUrl,jdbcType=VARCHAR},
      </if>
      <if test="qualificationCardUrl != null and qualificationCardUrl != ''">
        qualification_card_url = #{qualificationCardUrl,jdbcType=VARCHAR},
      </if>
      <if test="practiceCardUrl != null and practiceCardUrl != ''">
        practice_card_url = #{practiceCardUrl,jdbcType=VARCHAR},
      </if>
      <if test="auditStatus != null">
        audit_status = #{auditStatus,jdbcType=INTEGER},
      </if>
      <if test="completeStatus != null">
        complete_status = #{completeStatus,jdbcType=INTEGER},
      </if>
      <if test="call != null and call != ''">
        `call` = #{call,jdbcType=LONGVARCHAR},
      </if>
      <if test="workExperience != null and workExperience != ''">
        work_experience = #{workExperience,jdbcType=LONGVARCHAR},
      </if>
      <if test="educationExperience != null and educationExperience != ''">
        education_experience = #{educationExperience,jdbcType=LONGVARCHAR},
      </if>
      <if test="works != null and works != ''">
        works = #{works,jdbcType=LONGVARCHAR},
      </if>
      <if test="goodField != null and goodField != ''">
        good_field = #{goodField,jdbcType=LONGVARCHAR},
      </if>
      <if test="profile != null and profile != ''">
        profile = #{profile,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where openid = #{openid,jdbcType=VARCHAR}
  </update>
  
  <select id="findByPageWeb" resultMap="BaseResultMap">
  	select <include refid="Base_Column_List"/> from doctor
  	where 1=1
  	<if test="name != '' and name != null">
  		and `name` like contcat('%',#{name},'%')
  	</if>
  	<if test="auditStatus != null">
  		and audit_status = #{auditStatus}
  	</if>
  	order by create_time desc
  	<if test="pageQuery != null">
      limit #{pageQuery.start} , #{pageQuery.pageSize} 
    </if>
  </select>
  
  <select id="findCountWeb" resultType="java.lang.Integer">
  	select count(1) from doctor
  	where 1=1
  	<if test="name != '' and name != null">
  		and `name` like contcat('%',#{name},'%')
  	</if>
  	<if test="auditStatus != null">
  		and audit_status = #{auditStatus}
  	</if>
  </select>
  
  <select id="findByPage" resultType="com.phicomm.doctor.service.response.DoctorListResponse">
  	SELECT d.openid,d.name,d.head_img_url AS headImgUrl,d.work_time AS workTime,
  	d.department_name AS departmentName, d.title AS doctorTitle,d.call,dr.start_time AS startTime,
  	dr.end_time AS endTime,dr.status
  	FROM doctor d 
  	LEFT JOIN doctor_relese dr 
  	ON d.id = dr.doctor_id 
  	WHERE d.audit_status = 1
  	<if test="departmentId == null">
  		<if test="requestList != null">
  			AND d.department_id IN 
	  		<foreach collection="requestList" item="request" open="(" close=")" separator=",">
				#{request.departmentId}
			</foreach>
		
  			AND d.area IN 
	  		<foreach collection="requestList" item="request" open="(" close=")" separator=",">
				#{request.area}
			</foreach>
		
		<!-- <if test="request.workTime != null">
  			AND d.work_time IN 
	  		<foreach collection="requestList" item="request" open="(" close=")" separator=",">
				#{request.workTime}
			</foreach>
		</if> -->
		
			AND 
			<foreach collection="requestList" item="request" open="(" close=")" separator="or">
				((DATE_FORMAT(dr.start_time,'%Y-%m-%d') <![CDATA[>=]]> DATE_FORMAT((date_sub(#{request.time}, interval 5 day)),'%Y-%m-%d')
				AND
				DATE_FORMAT(dr.start_time,'%Y-%m-%d') <![CDATA[<=]]> DATE_FORMAT((date_add(#{request.time}, interval 5 day)),'%Y-%m-%d')))
				OR
				((DATE_FORMAT(dr.end_time,'%Y-%m-%d') <![CDATA[>=]]> DATE_FORMAT((date_sub(#{request.time}, interval 5 day)),'%Y-%m-%d')
				AND
				DATE_FORMAT(dr.end_time,'%Y-%m-%d') <![CDATA[<=]]> DATE_FORMAT((date_add(#{request.time}, interval 5 day)),'%Y-%m-%d')))
				OR
				((DATE_FORMAT(dr.start_time,'%Y-%m-%d') <![CDATA[<=]]> DATE_FORMAT((date_sub(#{request.time}, interval 5 day)),'%Y-%m-%d')
				AND
				DATE_FORMAT(dr.end_time,'%Y-%m-%d') <![CDATA[>=]]> DATE_FORMAT((date_add(#{request.time}, interval 5 day)),'%Y-%m-%d')))
			</foreach>
		</if>
  	</if>
  	<if test="departmentId != null">
		AND d.department_id = #{departmentId}
		AND dr.id IS NOT NULL
	</if>
	
	order by dr.create_time desc

    <if test="pageQuery != null">
      limit #{pageQuery.start} , #{pageQuery.pageSize} 
    </if>
  </select>
  
  <select id="findCount" resultType="java.lang.Integer">
  	SELECT COUNT(1) FROM doctor d 
  	LEFT JOIN doctor_relese dr 
  	ON d.id = dr.doctor_id 
  	WHERE d.audit_status = 1
  	<if test="departmentId == null">
  		<if test="requestList != null">
  			AND d.department_id IN 
	  		<foreach collection="requestList" item="request" open="(" close=")" separator=",">
				#{request.departmentId}
			</foreach>
		
  			AND d.area IN 
	  		<foreach collection="requestList" item="request" open="(" close=")" separator=",">
				#{request.area}
			</foreach>
		
		<!-- <if test="request.workTime != null">
  			AND d.work_time IN 
	  		<foreach collection="requestList" item="request" open="(" close=")" separator=",">
				#{request.workTime}
			</foreach>
		</if> -->
		
			AND 
			<foreach collection="requestList" item="request" open="(" close=")" separator="or">
				((DATE_FORMAT(dr.start_time,'%Y-%m-%d') <![CDATA[>=]]> DATE_FORMAT((date_sub(#{request.time}, interval 5 day)),'%Y-%m-%d')
				AND
				DATE_FORMAT(dr.start_time,'%Y-%m-%d') <![CDATA[<=]]> DATE_FORMAT((date_add(#{request.time}, interval 5 day)),'%Y-%m-%d')))
				OR
				((DATE_FORMAT(dr.end_time,'%Y-%m-%d') <![CDATA[>=]]> DATE_FORMAT((date_sub(#{request.time}, interval 5 day)),'%Y-%m-%d')
				AND
				DATE_FORMAT(dr.end_time,'%Y-%m-%d') <![CDATA[<=]]> DATE_FORMAT((date_add(#{request.time}, interval 5 day)),'%Y-%m-%d')))
				OR
				((DATE_FORMAT(dr.start_time,'%Y-%m-%d') <![CDATA[<=]]> DATE_FORMAT((date_sub(#{request.time}, interval 5 day)),'%Y-%m-%d')
				AND
				DATE_FORMAT(dr.end_time,'%Y-%m-%d') <![CDATA[>=]]> DATE_FORMAT((date_add(#{request.time}, interval 5 day)),'%Y-%m-%d')))
			</foreach>
		</if>
  	</if>
  	<if test="departmentId != null">
		AND d.department_id = #{departmentId}
	</if>
  </select>
</mapper>