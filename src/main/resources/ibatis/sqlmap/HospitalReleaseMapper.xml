<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.phicomm.doctor.dataaccess.dao.HospitalReleaseMapper">
  <resultMap id="BaseResultMap" type="com.phicomm.doctor.dataaccess.domain.HospitalRelease">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="hospital_id" jdbcType="INTEGER" property="hospitalId" />
    <result column="department_id" jdbcType="INTEGER" property="departmentId" />
    <result column="department_name" jdbcType="VARCHAR" property="departmentName" />
    <result column="title" jdbcType="VARCHAR" property="title" />
    <result column="doctor_title" jdbcType="INTEGER" property="doctorTitle" />
    <result column="education" jdbcType="INTEGER" property="education" />
    <result column="work_time" jdbcType="INTEGER" property="workTime" />
    <result column="time" jdbcType="TIMESTAMP" property="time" />
    <result column="money_type" jdbcType="INTEGER" property="moneyType" />
    <result column="audit_status" jdbcType="INTEGER" property="auditStatus" />
    <result column="status" jdbcType="INTEGER" property="status" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="job_description" jdbcType="LONGVARCHAR" property="jobDescription" />
    <result column="job_require" jdbcType="LONGVARCHAR" property="jobRequire" />
  </resultMap>
  
  <sql id="Base_Column_List">
    id, hospital_id, department_id, department_name, `title`, doctor_title, education, work_time, `time`, 
    money_type, audit_status, `status`, create_time, update_time, job_description, job_require
  </sql>
  
  <delete id="deleteById" parameterType="java.lang.Integer">
    delete from hospital_release
    where id = #{id,jdbcType=INTEGER}
  </delete>
  
  <insert id="insert" parameterType="com.phicomm.doctor.dataaccess.domain.HospitalRelease">
    insert into hospital_release (hospital_id, department_id, 
      department_name, title, doctor_title, education, 
      work_time, time, money_type, create_time, update_time, 
      job_description, job_require)
    values (#{hospitalId,jdbcType=INTEGER}, #{departmentId,jdbcType=INTEGER}, 
      #{departmentName,jdbcType=VARCHAR}, #{title,jdbcType=VARCHAR}, #{doctorTitle,jdbcType=INTEGER}, #{education,jdbcType=INTEGER}, 
      #{workTime,jdbcType=INTEGER}, #{time,jdbcType=TIMESTAMP}, #{moneyType,jdbcType=INTEGER}, now(), now(), 
      #{jobDescription,jdbcType=LONGVARCHAR}, #{jobRequire,jdbcType=LONGVARCHAR})
  </insert>
  
  <update id="updateStatus">
  	update hospital_release
  	<set>
  		<if test="status != null">`status` = #{status,jdbcType=INTEGER},</if>
  		<if test="auditStatus != null">audit_status = #{auditStatus,jdbcType=INTEGER},</if>
  		update_time = now()
  	</set>
  	where id = #{id,jdbcType=INTEGER}
  </update>
  
  <select id="findReleaseListPage" resultType="com.phicomm.doctor.service.response.ReleaseListResponse">
  	SELECT h.`name` AS hospitalName,h.logo_img_url AS logoImgUrl,h.scale,
  	hr.id,hr.title,hr.department_name AS departmentName,
	hr.doctor_title AS doctorTitle,hr.work_time AS workTime,hr.time,hr.money_type AS moneyType,
	hr.audit_status AS auditStatus,hr.create_time AS createTime
	FROM hospital_release hr LEFT JOIN hospital h ON hr.hospital_id = h.id
	WHERE 1=1
	<if test="request.hospitalOpenid != null and request.hospitalOpenid != ''">
		AND h.openid = #{request.hospitalOpenid}
	</if>
	<if test="request.hospitalOpenid == null or request.hospitalOpenid == ''">
		<if test="request.area != null">
			AND h.area = #{request.area}
		</if>
		<if test="request.doctorTitle != null">
			AND hr.doctor_title <![CDATA[<=]]> #{request.doctorTitle}
		</if>
		<if test="request.departmentId != null">
			AND hr.department_id = #{request.departmentId}
		</if>
		<if test="request.startTime != null">
			AND DATE_FORMAT((date_add(hr.time, interval 5 day)),'%Y-%m-%d') <![CDATA[>=]]> #{request.startTime}
		</if>
		<if test="request.endTime != null">
			AND DATE_FORMAT((date_sub(hr.time, interval 5 day)),'%Y-%m-%d') <![CDATA[<=]]> #{request.startTime}
		</if>
		AND hr.audit_status = 1
		AND hr.status = 1
	</if>
	<if test="departmentId != null">
		AND hr.department_id = #{departmentId}
		AND hr.audit_status = 1
		AND hr.status = 1
	</if>
	
	order by hr.create_time desc

    <if test="pageQuery != null">
      limit #{pageQuery.start} , #{pageQuery.pageSize} 
    </if>
  </select>
  
  <select id="findReleaseCount" resultType="java.lang.Integer">
  	SELECT COUNT(1)
	FROM hospital_release hr LEFT JOIN hospital h ON hr.hospital_id = h.id
	WHERE 1=1
	<if test="request.hospitalOpenid != null and request.hospitalOpenid != ''">
		AND h.openid = #{request.hospitalOpenid}
	</if>
	<if test="request.hospitalOpenid == null or request.hospitalOpenid == ''">
		<if test="request.area != null">
			AND h.area = #{request.area}
		</if>
		<if test="request.doctorTitle != null">
			AND hr.doctor_title <![CDATA[<=]]> #{request.doctorTitle}
		</if>
		<if test="request.departmentId != null">
			AND hr.department_id = #{request.departmentId}
		</if>
		<if test="request.startTime != null">
			AND DATE_FORMAT((date_add(hr.time, interval 5 day)),'%Y-%m-%d') <![CDATA[>=]]> #{request.startTime}
		</if>
		<if test="request.endTime != null">
			AND DATE_FORMAT((date_sub(hr.time, interval 5 day)),'%Y-%m-%d') <![CDATA[<=]]> #{request.startTime}
		</if>
		AND hr.audit_status = 1
		AND hr.status = 1
	</if>
	<if test="departmentId != null">
		AND hr.department_id = #{departmentId}
		AND hr.audit_status = 1
		AND hr.status = 1
	</if>
  </select>
  
  <select id="findById" resultType="com.phicomm.doctor.service.response.ReleaseListResponse">
  	SELECT h.`name` AS hospitalName,h.logo_img_url AS logoImgUrl,h.tag,h.openid,
  	hr.id,hr.title,hr.department_name AS departmentName,
	hr.doctor_title AS doctorTitle,hr.work_time AS workTime,hr.time,hr.money_type AS moneyType,
	hr.audit_status AS auditStatus,hr.create_time AS createTime,hr.education,
	hr.job_description AS jobDescription,hr.job_require AS jobRequire
	FROM hospital_release hr LEFT JOIN hospital h ON hr.hospital_id = h.id
	WHERE 
	hr.audit_status = 1
	AND hr.status = 1
	AND hr.id = #{releaseId,jdbcType=INTEGER}
  </select>
  
  <select id="findListByHid" parameterType="java.lang.Integer" resultMap="BaseResultMap">
  	SELECT <include refid="Base_Column_List"/> FROM hospital_release
  	WHERE audit_status = 1 AND status = 1
  	AND hospital_id = #{hospitalId}
  </select>
</mapper>